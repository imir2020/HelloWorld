Оптимизация алгоритма сложения


<input> 25 10
read 1
read 2
do:
load 2
sub = 1
store 2
load 1
store 3

loop:
load 3
add 1
store 3
load 2
sub = 1
jz tan
store 2
jgtz loop
tan:
write 3
halt

Деление.

<input> 19 9


read 1

read 2

load 2; проверка, на ноль делить нельзя.


jz end


load =0

store 3


do:

load 1

sub 2

jgtz next

jz next

end:

write 3; результат

write 1; остаток от деления

halt


next:

store 1

load 3

add = 1

store 3

jgtz do

jz do


Сортировка:

<input> 8 2 8 256 16 64 32 128 4


load =10; начало нумерации ячеек

store 1 ;

read 2 ; загрузка счётчика

add 2; сложить с 10

sub = 2

store 8 ;

load =0; обнулить сумматор

store 3 ;


read_arr:

load 2

jz end

store 4 ;

load 1

store 5 ;

jmp read_arr_do

read_arr_loop:

load 5

add =1

store 5 ; сохранить измененный номер ячейки

read_arr_do:

read *5; * - в ячейке находится не число, а адрес ячейки

load 4 ;

sub =1

store 4 ;

jgtz read_arr_loop


check_small:

load 2

sub =1

jgtz find_mini

load 1

sub =1

store 7

jmp out


find_mini:

load 1

add 3

store 6 ;

store 7 ;

add =1

store 5 ;

load 2

sub 3

sub =1

store 4 ;

jmp find_mini_do

find_mini_loop:

load 5

add =1

store 5 ;

find_mini_do:

load *5

sub *6

jgtz find_mini_big

load 5

store 6 ;

find_mini_big:

load 4

sub =1

store 4 ;

jgtz find_mini_loop

load 7

sub 6

jz out_iter

load *6

store 4

load *7

store *6

load 4

store *7


out_iter:

write *7; вывод вычисленного минимального значения.

load 3

add =1

store 3 ;

load 8

sub 7

jgtz find_mini


out:

load 7

add =1

write *0


end:

halt
